==================================================
;TODO

read and organize
elaborate


==================================================
;UNDISTILLED

how kreck consumed all
did it?

going in circles, looking at problems from different angles
wondering if they were problems at all

calling things retrospectively

sophistication creep
	notes get complicated
	file names make no sense
	aesthetic problems arise
	now I want navbars for notes 'n stuff
	stuff gets self-referential
		it creates even more complexity

the risk of doing stuff like wondering which header file should be included first
pedantry

intentionally asking stupid questions

cached beauty
ultraintuition
inner sense of wonkiness

it's really ugly when it's complex, you need it, and then you can throw it away

it's pretty when you can mess around with it

when you become OK with complexity by exposure
	the obvious benefit
	the danger

in pock you don't have to deal with improper lists

idiocentric computer... infrastructure?
	name?
		project?
			too narrow meaning?
		stack?
		toolchain?
			pock and kreck are different
		system?
		family? 
		infrastructure? ***

only software for now

not concerned with me as a unique individual
finding out how I differ from other people's preferences for computer stuff is
against the spirit
	
false aesthetic appeal of organization and formalization
	organization shouldn't be for the sake of itself

pcmonk's essay on dead ends or something
	
idio as in idiosyncracy
idio as in idiocracy

reinventing the wheel?
	not quite
	finding giants to climb

for fun
not for the team
not for a team
not for a customer
not for the customer
not for academia
it might be for you, if you're into stuff like that
no need for compatibility
no need for familiarity


boring stuff
	probably most drivers
	vector fonts
	

portability

it's not meant to be closed
	i don't want to write an epub reader

idiocentric

my limitations
	not enough eyes to make all bugs shallow
	just being dumb and clumsy
	not knowing not knowing

"less confusing design choice"
	matters of taste
	matters of non-taste

I want to write unrelated stuff in it some day

idiocentric vs egocentric?
	it's for me by me
	bolstering ego

VV change to "my own?"
idionsyncracy
	idiosyncratic doesn't mean close-minded
		openness

idiocentric doesn't mean close-minded
	openness
	
does it please God?

the big why

the aesthetics

the small picture

theory as a scaffolding
	messy stuff

overthinking
	what I did with refcounts

undue importance to problems

distilling notes

avoiding stuff that's good but complicated

note taking for the sake of note taking is cringe.
	it's fake knowledge

Being too self-conscious

If I think I could figure it out by doing it, I shouldn't try to figure it out by thinking about it.
Doing it on a computer is just thinking, but more robust.


reasons, justifications
	bloat
	justifying justifications
	justifying justifications of justifications

design vs philosophy?
	check pock

overdoing stuff

overnoting
	justifications take time to write, read and think about
	evaluating against principles takes time
	it takes time
	having too many note files makes 

overdesigning
	urbit's 4-letter naming convention

orphaning thoughts


Writing style
	simple language
		"my own" instead of "idiocentric"
	"I" vs. "you", "we", "one"
	"It suddenly feels different even if I didn't intend it"	

	formal & informal

philosophy as an afterthought 
	for finding consistencies & inconsistencies
	for generalizing
	for aiding future decisions
		as a tool which may or may not be useful

the toolkit is shaped by the workpiece

doing philosophy diligently is harder than programming diligently

if you keep recompiling a program, you know you've been wasting time

if you do it with philosopy, you might trick youreslf into believing that things
make more sense now than they used to.
This may or may not be true, but it's hard to notice when you start just convincing
yourself of your own BS

FizzBuzz Wittgenstein edition

the topic might change

move to meta?
move to meta-meta?

the natural language is for talking to myself and other
people about this whole weird thing

stuff that's not really mathematics
messy
stuff that I can't easily define well
by philosophy I mean

justification is secondary to vision

fun

if stuff violates the principles, the principles might be wrong too

is thinking about philosophy useful?
	thinking about what?

[move to some other file?]
	index?
	meta?
pock
	for deeply understanding machine-independent semantics of programming
	to keep the interpreter simple
	axiomatic
kreck
	not axiomatic
	low floor, high ceiling
VM - tephra
	what?
		not a nock like vm
		a vm that resembles a processor
		why?
			to understand compilers
			so it can be kinda fast
	maybe wasm? it is s-expy already?
		meh, it has types and functions
		I don't like going down with abstractions
kernel
shell
TUI lib
text editor
	why?
		vim, emacs and vscode are bloated
	cool stuff!
	files & trees
debugger
	on programming language side


reinventing the wheel

expression expanding lisp debugger

proving that which is reasonably easy to prove
	reasonably easy
		YMMV
